#if defined MOZ_GENERATED_EVENT_LIST
MOZ_GENERATED_EVENT(ProgressEvent)
MOZ_GENERATED_EVENT(StorageEvent)
MOZ_GENERATED_EVENT(DeviceProximityEvent)
MOZ_GENERATED_EVENT(MozSettingsEvent)
MOZ_GENERATED_EVENT(UserProximityEvent)
MOZ_GENERATED_EVENT(CustomEvent)
MOZ_GENERATED_EVENT(PageTransitionEvent)
MOZ_GENERATED_EVENT(DOMTransactionEvent)
MOZ_GENERATED_EVENT(PopStateEvent)
MOZ_GENERATED_EVENT(HashChangeEvent)
MOZ_GENERATED_EVENT(CloseEvent)
MOZ_GENERATED_EVENT(MozContactChangeEvent)
MOZ_GENERATED_EVENT(DeviceOrientationEvent)
MOZ_GENERATED_EVENT(DeviceLightEvent)
MOZ_GENERATED_EVENT(MozApplicationEvent)
MOZ_GENERATED_EVENT(SmartCardEvent)
MOZ_GENERATED_EVENT(StyleRuleChangeEvent)
MOZ_GENERATED_EVENT(StyleSheetChangeEvent)
MOZ_GENERATED_EVENT(StyleSheetApplicableStateChangeEvent)
MOZ_GENERATED_EVENT(ElementReplaceEvent)
MOZ_GENERATED_EVENT(MozSmsEvent)
MOZ_GENERATED_EVENT(MozMmsEvent)
MOZ_GENERATED_EVENT(SpeechSynthesisEvent)
MOZ_GENERATED_EVENT(DeviceStorageChangeEvent)
MOZ_GENERATED_EVENT(PopupBlockedEvent)
MOZ_GENERATED_EVENT(BlobEvent)
MOZ_GENERATED_EVENT(SpeechRecognitionEvent)
MOZ_GENERATED_EVENT(SpeechRecognitionError)
#undef MOZ_GENERATED_EVENT

#elif defined MOZ_GENERATED_EVENTS_INCLUDES
#include "nsIDOMProgressEvent.h"
#include "nsIDOMStorageEvent.h"
#include "nsIDOMDeviceProximityEvent.h"
#include "nsIDOMMozSettingsEvent.h"
#include "nsIDOMUserProximityEvent.h"
#include "nsIDOMCustomEvent.h"
#include "nsIDOMPageTransitionEvent.h"
#include "nsIDOMDOMTransactionEvent.h"
#include "nsIDOMPopStateEvent.h"
#include "nsIDOMHashChangeEvent.h"
#include "nsIDOMCloseEvent.h"
#include "nsIDOMMozContactChangeEvent.h"
#include "nsIDOMDeviceOrientationEvent.h"
#include "nsIDOMDeviceLightEvent.h"
#include "nsIDOMMozApplicationEvent.h"
#include "nsIDOMSmartCardEvent.h"
#include "nsIDOMStyleRuleChangeEvent.h"
#include "nsIDOMStyleSheetChangeEvent.h"
#include "nsIDOMStyleSheetApplicableStateChangeEvent.h"
#include "nsIDOMElementReplaceEvent.h"
#include "nsIDOMMozSmsEvent.h"
#include "nsIDOMMozMmsEvent.h"
#include "nsIDOMSpeechSynthesisEvent.h"
#include "nsIDOMDeviceStorageChangeEvent.h"
#include "nsIDOMPopupBlockedEvent.h"
#include "nsIDOMBlobEvent.h"
#include "nsIDOMSpeechRecognitionEvent.h"
#include "nsIDOMSpeechRecognitionError.h"
#else
#ifndef _gen_mozilla_idl_generated_events_h_
#define _gen_mozilla_idl_generated_events_h_

/* THIS FILE IS AUTOGENERATED - DO NOT EDIT */
#include "nscore.h"
class nsEvent;
class nsIDOMEvent;
class nsPresContext;
namespace mozilla {
namespace dom {
class EventTarget;
}
}

nsresult
NS_NewDOMProgressEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMStorageEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMDeviceProximityEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMMozSettingsEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMUserProximityEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMCustomEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMPageTransitionEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMDOMTransactionEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMPopStateEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMHashChangeEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMCloseEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMMozContactChangeEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMDeviceOrientationEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMDeviceLightEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMMozApplicationEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMSmartCardEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMStyleRuleChangeEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMStyleSheetChangeEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMStyleSheetApplicableStateChangeEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMElementReplaceEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMMozSmsEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMMozMmsEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMSpeechSynthesisEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMDeviceStorageChangeEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMPopupBlockedEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMBlobEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMSpeechRecognitionEvent(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);
nsresult
NS_NewDOMSpeechRecognitionError(nsIDOMEvent** aInstance, mozilla::dom::EventTarget* aOwner, nsPresContext* aPresContext, nsEvent* aEvent);

#endif
#endif
